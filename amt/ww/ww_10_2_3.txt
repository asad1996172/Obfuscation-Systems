It has a good campus and liberal arts program, but its astounding failure to dredge up even a rudimentary Computer Science department hurts its chances terribly. Next is UNC. Admittedly, it has an excellent program in Computer Science, but it also lacks a good liberal arts program. I find the architecture distasteful, and the proximity to a metropolitan area is a little too close for comfort. In third is Clemson. I have been to Clemson, and find its campus beautiful. Its CS program is also extremely good, as are its extracurriculars. However, it lacks the reputation that it needs to capture the attention of a prospective employer. Second is Stanford. Stanford seems to have everything locked down, but the difficulty of admittance is what made the decision for me. I would much rather go to a school that isn’t so heavily focused on academics, and a little more on the experience. Therefore, my top college selection is Boston College. It is Catholic, it has a beautiful campus, and its extracurriculars are first-rate. The only quirk is that its CS program only goes up to a Bachelor’s degree, but after careful consideration, I have decided that this is a minor gripe. My chosen career path, Information Security, does much of its training on the job, so a Ph.D. is not necessarily required. I think Boston College is the overall best college for me.

	The engineering goal for this project was to create a computer program that could effectively simulate several creatures foraging in a simple dynamic biological system, using a programming technique known as genetic algorithms. Genetic algorithms are a heuristic programming method that account for a wide range of possible solutions when solving a problem and select the most effective solution based on the principles of natural selection. The programming language selected was C++; the version implemented was Bloodshed Dev C++ Version 4.9.9.2. The simulation included three two-dimensional arrays that represented multiple “patches” of a total environment. Creatures, nicknamed “anims”, were then generated and given the necessary functions to move, hunt, eat, and think. Several genetic algorithms were then written as control programs to select the most efficient strategy for each function of the anim; in the case of patch selection, a general equation derived from previous work in dynamic systems was used.. Other functions included a binary conversion program and a menu function. After writing the initial code, it was debugged and run several times in order to ensure the validity of the randomness of the random number generators, as well as to check for potential errors in the execution of the code. The engineering goal was met, since the program ran efficiently, without error, and demonstrated a significant effect of the genetic algorithms on the learning patterns of the simulated creatures.
	Evolution is a curious phenomenon. Thrust into the harsh, unyielding environment of nature, organisms must adapt themselves to their environment or die out. 